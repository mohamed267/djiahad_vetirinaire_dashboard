{"version":3,"file":"static/js/381.e4131558.chunk.js","mappings":"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","sources":["pages/document/document.jsx","utils/date.js","utils/document.js"],"sourcesContent":["import {useState , useEffect} from \"react\"\r\nimport {useDispatch , useSelector } from \"react-redux\"\r\nimport {useLocation  ,Link,   useParams} from 'react-router-dom'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport Sidebar from  \"../../components/sidebar/sidebar\"\r\nimport Navbar from \"../../components/navbar/navbar\"\r\nimport {Breadcrumb, Container , Row,Col , Button, BreadcrumbItem} from \"reactstrap\"\r\nimport \"./document.scss\"\r\n\r\nimport {getForm , setDataExtracted  , setFilteredData} from \"../../store/formReducer\"\r\nimport dataHandler from \"../../utils/document\"\r\nimport {toLocal} from \"../../utils/date\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst filterData  = (data) =>{\r\n    const arr= [];\r\n    var snap = [];\r\n    var i = 0;\r\n    data.map((el , key)=>{\r\n        if(el.type==\"title\"){\r\n            i=i+1;\r\n        }\r\n\r\n\r\n        if(i == 3 ){\r\n            arr.push(snap)\r\n            i = 1;\r\n            snap=[];\r\n        }\r\n        if(key+1== data.length){\r\n            snap.push(el);\r\n            arr.push(snap)\r\n            i = 1;\r\n            snap=[];\r\n\r\n        }\r\n        \r\n        snap.push(el);\r\n         \r\n    })\r\n\r\n    return arr\r\n\r\n}\r\nfunction getWindowSize() {\r\n  const {innerWidth, innerHeight} = window;\r\n  return {innerWidth, innerHeight};\r\n} \r\n\r\nconst Document = ()=>{\r\n    const dispatch = useDispatch()\r\n    const {form_id} = useParams()\r\n    const {form } = useSelector(state=>state.form.details)\r\n    \r\n    const opened = useSelector(state=>state.nav.opened)\r\n    const [page , setPage] = useState(0)\r\n    const [pages , setPages] = useState(0);\r\n    const [isMobile, setIsMobile] = useState(true);\r\n    const [filtereddata , setFiltereddata] = useState([])\r\n\r\n\r\n\r\n\r\n\r\n    function handleWindowResize() {\r\n        setIsMobile(getWindowSize().innerWidth < 600);\r\n    }\r\n\r\n    useEffect(() => {    \r\n        setIsMobile(getWindowSize().innerWidth < 600);\r\n        window.addEventListener('resize', handleWindowResize);\r\n        dispatch(getForm({form_id}))\r\n    }, []);\r\n    useEffect(()=>{\r\n        setPages(filtereddata.length ? filtereddata.length : 0)\r\n    },[filtereddata ])\r\n\r\n    useEffect( ()=>{\r\n        \r\n        console.log(\"fildd  \", form)\r\n        let extracted = dataHandler.extractData(form)\r\n        let filtered = isMobile ?filterData(extracted) : [extracted]\r\n        setFiltereddata(filtered)\r\n    }, [form , isMobile])\r\n\r\n    \r\n\r\n\r\n\r\n    return(\r\n        <div className=\"flex document\">\r\n            <Sidebar />\r\n            <div className={`documentContainer ${opened ? \"nav-opened\" : \"nav-closed\"}`}>\r\n                <Navbar />\r\n\r\n                <Container className=\"py-4\">\r\n                    <Row className=\"justify-content-between align-items-center\">\r\n                        <Breadcrumb className=\"col-xl-11\">\r\n                            <BreadcrumbItem>{form? form.region ? form.region.region_name : \"\" :\"\"}</BreadcrumbItem>\r\n                            <BreadcrumbItem active>{form ? form.farm_name :\"\"}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <Col xl={1}>\r\n                            <Link to={`/document/edit/${form_id}`}>\r\n                        <i className=\"edit-button las la-pen\"></i>\r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"document_details shadow\">\r\n                            <Row className=\"top p-3 justify-content-between\">\r\n                                <Col className=\"d-flex flex-wrap align-items-baseline\">\r\n                                    <h1 className=\"title_enquete mr-3\">enquete épidémiologique</h1>\r\n                                    <p className=\"ferme\"> {form ? form.farm_name :\"\"}</p>\r\n                                </Col>\r\n                                <Col>\r\n                                    <h1 className=\"time\">date : {\r\n                                    form ?form.date ? toLocal(form.date) :\"\" : \"\"}</h1>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <PerfectScrollbar style={{maxHeight : \"500px\"}}>\r\n                                <Row className=\"details \">\r\n                                        {\r\n                                            filtereddata && \r\n                                            filtereddata[isMobile ? page : 0] && \r\n                                            filtereddata[isMobile ? page : 0].map(el=>{\r\n                                                if(el.type==\"title\"){\r\n                                                    return (\r\n                                                        <Col md={12} className='d-flex gap-3 align-items-center  '>\r\n                                                            <p className=\"title_details\">{el.label}</p>\r\n                                                            <p className=\"divider mx-4\"></p>\r\n                                                        </Col>\r\n                                                    )\r\n                                                }else if(el.type==\"gps\"){\r\n                                                    return (\r\n                                                        <Col  className='property d-flex my-4    gap-1 align-items-center flex-column  '>\r\n                                                            <p className=\"prop_name\">{el.name}</p>\r\n                                                            <a href={`https://maps.google.com/?q=${el.value}`} target=\"_blank\">\r\n                                                                <Button className=\"gps-button\">\r\n                                                                    <i className=\"las la-map-marker \"></i>\r\n                                                                </Button>\r\n                                                            </a>\r\n                                                        </Col>\r\n                                                    )\r\n                                                }else if(el.type==\"property\"){\r\n                                                    return (\r\n                                                        <Col  className='property d-flex my-4    gap-1 align-items-center flex-column  '>\r\n                                                            <p className=\"prop_name\">{el.name}</p>\r\n                                                            <p className=\"prop_value\">{el.value}</p>\r\n                                                        </Col>\r\n                                                    )\r\n                                                }else if(el.type==\"text\"){\r\n                                                    return (\r\n                                                        <PerfectScrollbar style={{maxHeight : \"150px\"}}>\r\n                                                            <Col className='w-100 p-3 property_text d-flex  gap-3 align-items-center flex-column  '>\r\n                                                                <p className=\"prop_text_value\">{el.value}</p>\r\n                                                            \r\n                                                            </Col>\r\n                                                        </PerfectScrollbar>\r\n                                                    )\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                </Row>\r\n                            \r\n                            </PerfectScrollbar>\r\n                            \r\n                            \r\n                        \r\n                    </div>\r\n                    {\r\n                        isMobile ? \r\n                        <Row className=\"justify-content-center my-4\">\r\n                            {\r\n                                (page !== 0) && \r\n                                <Col className=\"page-icon\">\r\n                                    <i  \r\n                                    onClick={()=>{setPage(page-1)}}\r\n                                    className=\"las cursor-pointer la-angle-left\"></i>\r\n                                </Col>\r\n                            }\r\n                            {\r\n                                (page !== pages) && \r\n                                <Col className=\"page-icon\">\r\n                                    <i\r\n                                    onClick={()=>{setPage(page+1)}}\r\n                                    className=\" cursor-pointer las la-angle-right\"></i>\r\n                                </Col>\r\n                            }\r\n                            \r\n                            \r\n                            \r\n                        </Row> :  null\r\n                    }\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Document","exports.toLocal = (date)=>{\r\n    console.log(\"date is \", date)\r\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n\r\n    \r\n\r\n    return(\r\n        new Date(date).toLocaleDateString(undefined , options)\r\n    )\r\n\r\n}","const extractData = (form)=>{\r\n\r\n\r\n    let objFields = {}\r\n    let priorities = []\r\n    let extractedData= []\r\n\r\n    if(form){\r\n        extractedData = [\r\n            {type : \"title\"  ,  label : \"région\" },\r\n           \r\n            {type : \"property\",\r\n            value : form.wilaya ? form.wilaya.wilaya_name ?\r\n            form.wilaya.wilaya_name :\"N/A\":\"N/A\" , name : \"wilaya\"},\r\n            {type : \"property\",\r\n            value : form.daira ? form.daira.daira_name ?\r\n            form.daira.daira_name :\"N/A\":\"N/A\" , name : \"daira\"},\r\n            {type : \"property\",\r\n            value : form.commune ? form.commune.commune_name ?\r\n            form.commune.commune_name :\"N/A\":\"N/A\" , name : \"commune\"},\r\n        ]\r\n\r\n\r\n\r\n        let address_fields = form && form.address_fields\r\n        let string_fields = form && form.string_fields\r\n        let boolean_fields = form && form.boolean_fields\r\n        let number_fields = form && form.number_fields\r\n        let text_fields =  form && form.text_fields\r\n        let date_fields =  form && form.date_fields\r\n\r\n\r\n        console.log(\"address field are \", address_fields)\r\n\r\n        address_fields && address_fields.map(field=>{\r\n            let address = field.address;\r\n            let form_field = field.form_field\r\n            let form_field_name = form_field.form_field_name\r\n            let lat = field.lat;\r\n            let lng = field.lng;\r\n            /*-------*/\r\n            let field_group = form_field.field_group\r\n            let field_group_slug = field_group.field_group_slug\r\n            let field_group_name = field_group.field_group_name\r\n            let priority  = new Date(field_group.createdAt).getTime()\r\n\r\n            if(!objFields[priority]){\r\n                objFields[priority] = {};\r\n                objFields[priority].group = {type : \"title\"  , slug : field_group_slug  ,label : field_group_name }\r\n                objFields[priority].fields = [];\r\n                priorities.push(priority)\r\n            }\r\n\r\n            if(lat && lng){\r\n                \r\n                objFields[priority].fields.push({\r\n                    type : \"gps\",\r\n                    name: form_field_name,\r\n                    value : `${lat},${lng}`,\r\n                })\r\n\r\n            }else{\r\n                 \r\n                objFields[priority].fields.push({\r\n                    type : \"property\",\r\n                    name : form_field_name,\r\n                    value : address ? address :\"N/A\" , \r\n                    name : form_field_name ,\r\n                })\r\n\r\n            }\r\n        })\r\n\r\n        string_fields && string_fields.map(field=>{\r\n            let value = field.field_value\r\n            value = typeof(value) == \"string\" ? value.split(\"_*_\").join(\" \") : \"\"\r\n            \r\n            value = field.field_value ?field.field_value : \"N/A\"\r\n\r\n            let form_field = field.form_field\r\n            let form_field_name = form_field.form_field_name\r\n            /*-------*/\r\n            let field_group = form_field.field_group\r\n            let field_group_slug = field_group.field_group_slug\r\n            let field_group_name = field_group.field_group_name\r\n            let priority  = new Date(field_group.createdAt).getTime()\r\n\r\n            if(!objFields[priority]){\r\n                objFields[priority] = {};\r\n                objFields[priority].group = {type : \"title\"  , slug : field_group_slug  ,label : field_group_name }\r\n                objFields[priority].fields = [];\r\n                priorities.push(priority)\r\n            }\r\n\r\n            objFields[priority].fields.push({\r\n                type : \"property\",\r\n                value : value , name : form_field_name ,\r\n            })\r\n        })\r\n\r\n\r\n        text_fields && text_fields.map(field=>{\r\n            \r\n            let value = field.field_value ?field.field_value : \"N/A\"\r\n\r\n            let form_field = field.form_field\r\n            let form_field_name = form_field.form_field_name\r\n            /*-------*/\r\n            let field_group = form_field.field_group\r\n            let field_group_slug = field_group.field_group_slug\r\n            let field_group_name = field_group.field_group_name\r\n            let priority  = new Date(field_group.createdAt).getTime()\r\n\r\n            if(!objFields[priority]){\r\n                objFields[priority] = {};\r\n                objFields[priority].group = {type : \"title\"  , slug : field_group_slug  ,label : field_group_name }\r\n                objFields[priority].fields = [];\r\n                priorities.push(priority)\r\n            }\r\n\r\n            objFields[priority].fields.push({\r\n                type : \"text\",\r\n                value : value , name : form_field_name ,\r\n            })\r\n        })\r\n\r\n        number_fields && number_fields.map(field=>{\r\n            let value = field.field_value \r\n\r\n            let form_field = field.form_field\r\n            let form_field_name = form_field.form_field_name\r\n            /*-------*/\r\n            let field_group = form_field.field_group\r\n            let field_group_slug = field_group.field_group_slug\r\n            let field_group_name = field_group.field_group_name\r\n            let priority  = new Date(field_group.createdAt).getTime()\r\n\r\n            if(!objFields[priority]){\r\n                objFields[priority] = {};\r\n                objFields[priority].group = {type : \"title\"  , slug : field_group_slug  ,label : field_group_name }\r\n                objFields[priority].fields = [];\r\n                priorities.push(priority)\r\n            }\r\n\r\n            objFields[priority].fields.push({\r\n                type : \"property\",\r\n                value : value , \r\n                name : form_field_name ,\r\n            })\r\n        })\r\n\r\n        boolean_fields && boolean_fields.map(field=>{\r\n            let value = field.field_value\r\n\r\n            let form_field = field.form_field\r\n            let form_field_name = form_field.form_field_name\r\n\r\n\r\n            /*-------*/\r\n            let field_group = form_field.field_group\r\n            let field_group_slug = field_group.field_group_slug\r\n            let field_group_name = field_group.field_group_name\r\n            let priority  = new Date(field_group.createdAt).getTime()\r\n\r\n            if(!objFields[priority]){\r\n                objFields[priority] = {};\r\n                objFields[priority].group = {type : \"title\"  , slug : field_group_slug  ,label : field_group_name }\r\n                objFields[priority].fields = [];\r\n                priorities.push(priority)\r\n            }\r\n\r\n\r\n            objFields[priority].fields.push({\r\n                type : \"property\",\r\n                value : value ? 'oui' : 'non' , \r\n                name : form_field_name ,\r\n            })\r\n        })\r\n\r\n        date_fields && date_fields.map(field=>{\r\n            let value = field.field_value ?field.field_value : \"N/A\"\r\n\r\n            let form_field = field.form_field\r\n            let form_field_name = form_field.form_field_name\r\n            /*-------*/\r\n            let field_group = form_field.field_group\r\n            let field_group_slug = field_group.field_group_slug\r\n            let field_group_name = field_group.field_group_name\r\n            let priority  = new Date(field_group.createdAt).getTime()\r\n\r\n            if(!objFields[priority]){\r\n                objFields[priority] = {};\r\n                objFields[priority].group = {type : \"title\"  , slug : field_group_slug  ,label : field_group_name }\r\n                objFields[priority].fields = [];\r\n                priorities.push(priority)\r\n            }\r\n\r\n            objFields[priority].fields.push({\r\n                type : \"date\",\r\n                value : value , \r\n                name : form_field_name ,\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    priorities.sort()\r\n\r\n\r\n    priorities.forEach(priority=>{\r\n        let group =  objFields[priority]\r\n        extractedData.push(group.group)\r\n        extractedData = [...extractedData , ...group.fields]\r\n\r\n    })\r\n\r\n\r\n\r\n    \r\n    return extractedData\r\n\r\n\r\n    \r\n    \r\n\r\n}\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\nconst extractForm = (form_fields)=>{\r\n    \r\n    let objFields = {}\r\n    let priorities = []\r\n    form_fields && form_fields.map(form_field=>{\r\n        let field_group = form_field.field_group\r\n        let field_group_slug = field_group.field_group_slug\r\n        let field_group_name = field_group.field_group_name\r\n        let priority  = new Date(field_group.createdAt).getTime()\r\n        if(!objFields[priority]){\r\n            objFields[priority] = {};\r\n            objFields[priority].group = {type : \"title\"  , slug : field_group_slug  ,label : field_group_name }\r\n            objFields[priority].fields = [];\r\n            priorities.push(priority)\r\n        }\r\n\r\n        \r\n        let form_field_id = form_field.form_field_id\r\n        let form_field_name = form_field.form_field_name\r\n        let form_field_type = form_field.form_field_type\r\n        let field_options =  form_field.field_options\r\n        /*-------*/\r\n\r\n        let type = \"\"\r\n        let typeInput = \"\"\r\n        let xl = 6\r\n\r\n       if(form_field_type ==\"STRING\"){\r\n            type = \"input\"\r\n            typeInput = \"text\"\r\n        }else if(form_field_type ==\"TEXT\"  ){\r\n            type = \"textarea\";\r\n            xl = 12;\r\n        }else if(form_field_type ==\"NUMBER\"  ){\r\n            type = \"input\"\r\n            typeInput = \"number\"\r\n        }else if(form_field_type ==\"DATE\"  ){\r\n            type = \"input\"\r\n            typeInput = \"date\"\r\n        }\r\n        if(form_field_type ==\"SELECT\"){\r\n            objFields[priority].fields.push( {\r\n                type : \"select\", \r\n                label : form_field_name ,\r\n                field : form_field_id.toString(),\r\n                name: `${form_field_name}__${form_field_id}`,\r\n                options : {\r\n                    label :\"field_option_value\" ,\r\n                    value : \"field_option_id\", \r\n                    options : field_options ? field_options :[] \r\n                },      \r\n                // icon : \"las la-lock input-icon\",\r\n                placeholder : \"\",\r\n                xl :6,\r\n                id :  `${form_field_name}__${form_field_id}`\r\n            })\r\n\r\n        }else if(form_field_type ==\"COMPLEXSELECT\"){\r\n\r\n            objFields[priority].fields.push( {\r\n                type : \"select_complex\", \r\n                label : form_field_name ,\r\n                field : form_field_id.toString(),\r\n                name: `${form_field_name}__${form_field_id}`,\r\n                options : {\r\n                    label :\"field_option_value\" ,\r\n                    value : \"field_option_id\", \r\n                    options : field_options ? field_options :[] \r\n                },      \r\n                // icon : \"las la-lock input-icon\",\r\n                placeholder : \"\",\r\n                xl :8,\r\n                id :  `${form_field_name}__${form_field_id}`\r\n            })\r\n\r\n        }else if(form_field_type ==\"ADDRESS\"){\r\n\r\n            objFields[priority].fields.push( {\r\n                type : \"address\", \r\n                label : form_field_name ,\r\n                field : form_field_id.toString(),\r\n                name: `${form_field_name}__${form_field_id}`,   \r\n                // icon : \"las la-lock input-icon\",\r\n                placeholder : \"\",\r\n                xl :8,\r\n                id :  `${form_field_name}__${form_field_id}`\r\n            })\r\n\r\n        }else if(form_field_type ==\"GPS\"){\r\n\r\n            objFields[priority].fields.push( {\r\n                type : \"gps\", \r\n                label : form_field_name ,\r\n                field : form_field_id.toString(),\r\n                name: `${form_field_name}__${form_field_id}`,   \r\n                // icon : \"las la-lock input-icon\",\r\n                placeholder : \"\",\r\n                xl :8,\r\n                id :  `${form_field_name}__${form_field_id}`\r\n            })\r\n\r\n        }else if(form_field_type ==\"BOOLEAN\"){\r\n\r\n                objFields[priority].fields.push( {\r\n                    type : \"switch\", \r\n                    label : form_field_name ,\r\n                    field : form_field_id.toString(),\r\n                    checkedOn : true,\r\n                    on : form_field_name,\r\n                    off : `non ${form_field_name}`,\r\n                    name: `${form_field_name}__${form_field_id}`,   \r\n                    // icon : \"las la-lock input-icon\",\r\n                    placeholder : \"\",\r\n                    xl :4,\r\n                    id :  `${form_field_name}__${form_field_id}`\r\n                })\r\n    \r\n        }else{\r\n\r\n            objFields[priority].fields.push({\r\n                type : type, \r\n                label : form_field_name,\r\n                name: `${form_field_name}__${form_field_id}`,\r\n                typeInput : typeInput,\r\n                field : form_field_id.toString(),\r\n                placeholder : \"\",\r\n                xl :xl,\r\n                id :  `${form_field_name}__${form_field_id}`,\r\n            })\r\n        }\r\n        \r\n    })\r\n\r\n\r\n   \r\n\r\n    let extractedData= [\r\n        {\r\n            type : 'input', \r\n            label : \"nom de la ferme\",\r\n            name: `farme_name`,\r\n            typeInput : \"text\",\r\n            field : \"farm_name\",\r\n            xl :6,\r\n            id : \"farme_name\",\r\n        },\r\n        {\r\n            type : 'input', \r\n            label : \"date de l'enquete\",\r\n            name: `date de l'enquète`,\r\n            typeInput : \"date\",\r\n            field : \"date\",\r\n            xl :6,\r\n            id : \"form_date\",\r\n        } , \r\n        {   \r\n            type : \"title\"  , \r\n            slug : \"région\"  ,\r\n            label : \"région\" \r\n        },\r\n        {\r\n            type : \"select\", \r\n            label : \"region\",\r\n            typeSelect : \"store\",\r\n            field : \"region\",\r\n            name: \"region\",\r\n            options : {\r\n                key : \"regions\",\r\n                where : \"region\",\r\n                label :  \"region_name\",\r\n                value :  \"region_id\"\r\n            } ,        \r\n            placeholder : \"saidir votre région\",\r\n            xl :4,\r\n            id :  \"region\"\r\n        },\r\n         {\r\n            type : \"select\", \r\n            label : \"wilaya\",\r\n            typeSelect : \"store\",\r\n            field : \"wilaya\",\r\n            name: \"wilaya\",\r\n            options : {\r\n                key : \"wilayas\",\r\n                where : \"wilaya\",\r\n                label :  \"wilaya_name\",\r\n                value :  \"wilaya_id\"\r\n            } ,        \r\n            placeholder : \"saisir votre wilaya\",\r\n            xl :4,\r\n            id :  \"wilaya\"\r\n        },\r\n        {\r\n            type : \"select\", \r\n            label : \"daira\",\r\n            typeSelect : \"store\",\r\n            field : \"daira\",\r\n            name: \"daira\",\r\n            options : {\r\n                key : \"dairas\",\r\n                where : \"daira\",\r\n                label :  \"daira_name\",\r\n                value :  \"daira_id\"\r\n            } ,        \r\n            placeholder : \"enter your daira\",\r\n            xl :4,\r\n            id :  \"daira\"\r\n        },\r\n        {\r\n            type : \"select\", \r\n            label : \"commune\",\r\n            typeSelect : \"store\",\r\n            field : \"commune\",\r\n            name: \"commune\",\r\n            options : {\r\n                key : \"communes\",\r\n                where : \"commune\",\r\n                label :  \"commune_name\",\r\n                value :  \"commune_id\"\r\n            } ,        \r\n            placeholder : \"enter your commune\",\r\n            xl :4,\r\n            id :  \"commune\"\r\n        }\r\n\r\n\r\n    ]\r\n\r\n\r\n    priorities.sort()\r\n\r\n\r\n    priorities.forEach(priority=>{\r\n        let group =  objFields[priority]\r\n        extractedData.push(group.group)\r\n        extractedData = [...extractedData , ...group.fields]\r\n\r\n    })\r\n\r\n\r\n    extractedData.push(\r\n        {\r\n            xl : 12,\r\n            className:\"px-3 my-4\",\r\n            fields : [\r\n                {\r\n                    type : \"button\",\r\n                    className : \"w-100 btn--primary\",\r\n                    text : \"save changes\"\r\n                }\r\n            ]\r\n        })\r\n        console.log(\"our all extrated \", extractedData)\r\n    return {\r\n         type : \"row\",\r\n        className : \"w-100 \",\r\n        fields :  extractedData ? extractedData :[]\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst dataForm = (form) =>{\r\n    let objData = {}\r\n\r\n   \r\n\r\n    if(form){\r\n        objData[\"date\"]= new Date(form.date).getTime()\r\n        objData[\"farm_name\"]= form.farm_name\r\n        objData[\"region\"] =  form.region\r\n        objData[\"wilaya\"] =  form.wilaya\r\n        objData[\"commune\"] =  form.commune\r\n        objData[\"daira\"] =  form.daira\r\n\r\n\r\n        let string_fields = form && form.string_fields\r\n\r\n        string_fields && string_fields.map(field=>{\r\n            let value = field.field_value\r\n            let form_field_id  = field.form_field_id\r\n\r\n            let form_type = field.form_field.form_field_type\r\n            if(form_type ==\"COMPLEXSELECT\"){\r\n                let field_options = field.form_field.field_options\r\n                let [field_value , extra] = value.split('_*_');\r\n\r\n                let filtered = field_options  && field_options.filter(option=>{\r\n                    return (option.field_option_value == field_value)\r\n                })\r\n\r\n                let obgVal = filtered[0] ? { ...filtered[0] , extra} : {extra}\r\n                objData[form_field_id.toString()] = obgVal\r\n                \r\n            }\r\n            if(form_type ==\"SELECT\"){\r\n                let field_options = field.form_field.field_options\r\n\r\n                let filtered = field_options  && field_options.filter(option=>{\r\n                    return (option.field_option_value == value)\r\n                })\r\n\r\n                let obgVal = filtered[0] ? filtered[0]   :{}\r\n                objData[form_field_id.toString()] = obgVal\r\n                \r\n            }\r\n\r\n            if(form_type ==\"STRING\"){\r\n                let value = field.field_value\r\n                objData[form_field_id.toString()] = value\r\n                \r\n            }\r\n\r\n           \r\n\r\n        })\r\n\r\n\r\n\r\n        \r\n\r\n\r\n\r\n        let fields =[] \r\n\r\n        fields = form  && form.text_fields \r\n\r\n        fields && fields.map(field=>{\r\n            let value = field.field_value\r\n            let form_field_id  = field.form_field_id\r\n            objData[form_field_id.toString()] = value\r\n        })\r\n        fields = form  && form.boolean_fields \r\n\r\n        fields && fields.map(field=>{\r\n            let value = field.field_value\r\n            let form_field_id  = field.form_field_id\r\n            objData[form_field_id.toString()] = value\r\n        })\r\n        fields = form  && form.number_fields \r\n\r\n\r\n        fields && fields.map(field=>{\r\n            let value = field.field_value\r\n            let form_field_id  = field.form_field_id\r\n            objData[form_field_id.toString()] = value\r\n        })\r\n\r\n        let address_fields = form && (form.address_fields )\r\n\r\n\r\n        address_fields && address_fields.map(field=>{\r\n            let form_field_id  = field.form_field_id\r\n            objData[form_field_id.toString()] = {\r\n                address : field.address,\r\n                lat : field.lat,\r\n                lng : field.lng\r\n            }\r\n        })\r\n\r\n\r\n        // address_fields && address_fields.map(field=>{\r\n        //     let address = field.address;\r\n        //     let form_field = field.form_field\r\n        //     let form_field_name = form_field.form_field_name\r\n        //     /*-------*/\r\n        //     let field_group = form_field.field_group\r\n        //     let field_group_slug = field_group.field_group_slug\r\n        //     let field_group_name = field_group.field_group_name\r\n        //     let priority  = new Date(field_group.createdAt).getTime()\r\n\r\n        //     if(!objFields[priority]){\r\n        //         objFields[priority] = {};\r\n        //         objFields[priority].group = {type : \"title\"  , slug : field_group_slug  ,label : field_group_name }\r\n        //         objFields[priority].fields = [];\r\n        //         priorities.push(priority)\r\n        //     }\r\n\r\n        //     objFields[priority].fields.push({\r\n        //         type : \"property\",\r\n        //         value : address , name : form_field_name ,\r\n        //     })\r\n        // })\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    return objData\r\n}\r\n\r\n\r\nconst document = {extractData , extractForm , dataForm}\r\n\r\n\r\nexport default document"],"names":["getWindowSize","window","innerWidth","innerHeight","dispatch","useDispatch","form_id","useParams","form","useSelector","state","details","opened","nav","useState","page","setPage","pages","setPages","isMobile","setIsMobile","filtereddata","setFiltereddata","handleWindowResize","useEffect","addEventListener","getForm","length","console","log","extracted","dataHandler","filtered","data","arr","snap","i","map","el","key","type","push","filterData","className","region","region_name","active","farm_name","xl","to","date","toLocal","style","maxHeight","md","label","name","href","value","target","onClick","exports","Date","toLocaleDateString","undefined","weekday","year","month","day","document","extractData","objFields","priorities","extractedData","wilaya","wilaya_name","daira","daira_name","commune","commune_name","address_fields","string_fields","boolean_fields","number_fields","text_fields","date_fields","field","address","form_field","form_field_name","lat","lng","field_group","field_group_slug","field_group_name","priority","createdAt","getTime","group","slug","fields","field_value","split","join","sort","forEach","extractForm","form_fields","form_field_id","form_field_type","field_options","typeInput","toString","options","placeholder","id","checkedOn","on","off","typeSelect","where","text","dataForm","objData","form_type","extra","filter","option","field_option_value","obgVal"],"sourceRoot":""}