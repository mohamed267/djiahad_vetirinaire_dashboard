{"version":3,"file":"static/js/965.19b59011.chunk.js","mappings":"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","sources":["components/form/formCreate.jsx","pages/document/new.jsx","utils/document.js"],"sourcesContent":["import {useState , useEffect} from 'react'\r\nimport {Form , FormGroup ,Label , Row , Col  } from  \"reactstrap\"\r\nimport {useLocation} from \"react-router-dom\"\r\nimport {useTranslation} from  \"react-i18next\"\r\nimport SwitchToogle from '../switchToggle/switchToggle'\r\nimport FileInput   from '../fileInput/fileInput'\r\nimport Input from '../input/input'\r\nimport TextArea from \"../input/textarea\"\r\nimport AddressInput from '../input/address'\r\nimport GpsInput from \"../input/gps\"\r\nimport Button from '../button/button'\r\nimport Select from \"../select/select\"\r\nimport ComplexSelect from \"../select/selectComplex\"\r\nimport StoredSelect from \"../select/storedSelect\"\r\nimport Map from \"../map/map\"\r\nimport Loader from \"../../layouts/loader/loader\"\r\nimport {exportData , reformate} from  \"../../utils/data\" \r\nimport \"./form.scss\"\r\n\r\nconst extractComponents = (data ={} , fields = []  , t , handleChange , isRacine  , loading )=>{\r\n    if(isRacine){    \r\n        let form_field_type =  data && data.form_field_type   \r\n        if(form_field_type && (form_field_type.value ===\"SELECT\" || form_field_type.value ===\"COMPLEXSELECT\" ) ){\r\n             fields[3] =  {\r\n                type : \"select\", \r\n                label : \"options\",\r\n                creatable : true,\r\n                field : \"field_options\",\r\n                name: \"field_options\",  \r\n                isMulti : true,   \r\n                // icon : \"las la-lock input-icon\",\r\n                placeholder : \"enter your options\",\r\n                xl :6,\r\n                id :  \"field_options\"\r\n            }\r\n        }else{\r\n            fields[3] =  {\r\n                type :  \"none\"\r\n            }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        fields.map(field=>{\r\n            if(field.type == \"none\"){\r\n                return null\r\n            }\r\n            else if(field.type==\"title\"){\r\n                return (\r\n                    <Col md={12} className='d-flex gap-3 align-items-center mb-3 '>\r\n                        <p className=\"title_details\">{field.label}</p>\r\n                        <p className=\"divider mx-4\"></p>\r\n                    </Col>\r\n                )\r\n            }else if(field.type){\r\n                if(field.type==\"imageInput\"){\r\n                    return(\r\n                        <Col xl={field.xl}>\r\n                            <FileInput \r\n                                src={exportData(data , field.field)} \r\n                                name={field.name}/>\r\n                        </Col>\r\n                    )\r\n                }else if(field.type==\"input\"){\r\n                    return ( \r\n                        <Col xl={field.xl}>\r\n                            <Input \r\n                                label={field.label}\r\n                                value={exportData(data , field.field)}\r\n                                name={field.name}\r\n                                field={field.field}\r\n                                placeholder={field.placeholder}\r\n                                className={field.className}\r\n                                type={field.typeInput}\r\n                                id={`id_form_${field.id}`}\r\n                                changed={handleChange}\r\n                            />\r\n                        </Col>\r\n                    )\r\n                }else if(field.type==\"textarea\"){\r\n                    return ( \r\n                        <Col xl={field.xl}>\r\n                            <TextArea \r\n                                label={field.label}\r\n                                value={exportData(data , field.field)}\r\n                                name={field.name}\r\n                                field={field.field}\r\n                                placeholder={field.placeholder}\r\n                                className={field.className}\r\n                                id={`id_form_${field.id}`}\r\n                                changed={handleChange}\r\n                            />\r\n                        </Col>\r\n                    )\r\n\r\n                }else if(field.type ==\"address\"){\r\n                    return (\r\n                        <Col xl={field.xl}>\r\n                            <AddressInput \r\n                                id={field.id}\r\n                                value=  {exportData(data , field.field)} \r\n                                field = {field.field}\r\n                                label = {field.label}\r\n                                name={field.name}\r\n                                changed={handleChange}\r\n                            />\r\n                        </Col>\r\n                    )\r\n                    \r\n                }else if(field.type ==\"gps\"){\r\n                    return (\r\n                        <Col xl={field.xl}>\r\n                            <GpsInput \r\n                                id={field.id}\r\n                                value=  {exportData(data , field.field)} \r\n                                field = {field.field}\r\n                                label = {field.label}\r\n                                name={field.name}\r\n                                changed={handleChange}\r\n                            />\r\n                        </Col>\r\n                    )\r\n                    \r\n                }else if(field.type==\"button\"){\r\n                    return (\r\n                        <Col xl={field.xl}>\r\n                            {\r\n                                loading ? <div>loading </div> : null\r\n                            }\r\n                            <Button \r\n                                className={field.className}\r\n                                text={field.text}\r\n\r\n                            />\r\n                        </Col>\r\n                    )\r\n                }else if(field.type==\"switch\"){\r\n                    return(\r\n                        <Col xl={field.xl}>\r\n                            <SwitchToogle\r\n                                id={field.id}\r\n                                value=  {exportData(data , field.field)} \r\n                                checkedOn = {field.checkedOn}\r\n                                on = {field.on}\r\n                                off = {field.off}\r\n                                label = {field.label}\r\n                                name={field.name}\r\n                                field={field.field}\r\n                                 changed={handleChange}\r\n                            />\r\n                        </Col>\r\n                    )\r\n                }else if(field.type==\"select\"){\r\n                    return(\r\n                        <Col xl={field.xl} className={field.className}>\r\n                            {\r\n                                (field.typeSelect == \"store\")\r\n                                ?  \r\n                                <StoredSelect \r\n                                    id={field.id}\r\n                                    value=  {exportData(data , field.field)} \r\n                                    field = {field.field}\r\n                                    field_deleted ={field.field_deleted}\r\n                                    options={field.options}\r\n                                    label = {field.label}\r\n                                    name={field.name}\r\n                                    isMulti={field.isMulti}\r\n                                    creatable={field.creatable}\r\n                                    changed={handleChange} />\r\n                                :\r\n                                <Select\r\n                                    id={field.id}\r\n                                    value=  {exportData(data , field.field)} \r\n                                    options={field.options}\r\n                                    field = {field.field}\r\n                                    field_deleted ={field.field_deleted}\r\n                                    label = {field.label}\r\n                                    name={field.name}\r\n                                    creatable={field.creatable}\r\n                                    isMulti={field.isMulti}\r\n                                    changed={handleChange} \r\n                                /> \r\n                            }\r\n                        </Col>\r\n                    )\r\n                }else if(field.type == \"select_complex\"){\r\n                    return(\r\n                        <Col xl={field.xl} className={field.className +\" row align-items-center\"}>\r\n                            {\r\n                                <ComplexSelect \r\n                                    id={field.id}\r\n                                    value=  {exportData(data , field.field)} \r\n                                    field = {field.field}\r\n                                    options={field.options}\r\n                                    label = {field.label}\r\n                                    name={field.name}\r\n                                    isMulti={field.isMulti}\r\n                                    creatable={field.creatable}\r\n                                    changed={handleChange}\r\n                                /> \r\n                            }\r\n                        </Col>\r\n                    )\r\n                }else if(field.type==\"map\"){\r\n                    return(\r\n                        <Col xl={field.xl}>\r\n                           <Map \r\n                                typeMap={field.typeMap}\r\n                                lat={exportData(data , field.field_lat)}\r\n                                lng={exportData(data , field.field_lng)}\r\n                                radius={exportData(data , field.field_radius)}\r\n                                field_radius={field.field_radius}\r\n                                field_lat={field.field_lat}\r\n                                field_lng={field.field_lng}\r\n                                changed={handleChange}\r\n                           />\r\n                        </Col>\r\n                    )\r\n                }\r\n\r\n            }else{\r\n                return (\r\n                    <Col xl={field.xl} >\r\n                        <Row className={field.className}>\r\n                            {extractComponents(data , field.fields)}\r\n                        </Row>\r\n                    </Col>\r\n                )\r\n            }\r\n        })\r\n    )\r\n}\r\n\r\n\r\nconst FormElement = ({structure , submit = ()=>{} , restricted , loading} )=>{\r\n    const {t} = useTranslation(\"common\");\r\n    const location = useLocation()\r\n    const [dataQuery , setDataQuery] =  useState({});\r\n    const handleChange = (key , value)=>{\r\n        setDataQuery({...dataQuery ,...reformate(value , key )})\r\n    }\r\n\r\n   \r\n\r\n    useEffect(()=>{\r\n        console.log(\"data query 3 \", dataQuery)\r\n    },[dataQuery])\r\n\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        submit(dataQuery);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={`form ${structure.className}`}>\r\n            <h4 className=\"title\">{t(structure.title)}</h4> \r\n            <Form onSubmit={handleSubmit}>\r\n                <Row gap={2} className=\"justify-content-between\">\r\n\r\n\r\n\r\n                    {\r\n                        // structure.fields.map(field=>{\r\n                        //     if(field.type=\"imageInput\"){\r\n                        //         return(\r\n                        //             <Col xl={field.xl}>\r\n                        //                 <FileInput \r\n                        //                     src={exportData(data , field.field)} \r\n                        //                     name={field.name}/>\r\n                        //             </Col>\r\n                        //         )\r\n                        //     }\r\n                        // })\r\n                        loading  ? \r\n                        (<Loader />)\r\n                        :\r\n                        extractComponents(dataQuery ,structure.fields , setDataQuery , handleChange , restricted , loading)\r\n                    }\r\n                    {/* <Col xl={6}>\r\n                        <Row>\r\n                        <Col xl={12}>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\">\r\n                            Name\r\n                            </Label>\r\n                                <Input\r\n                                id=\"exampleEmail\"\r\n                                name=\"email\"\r\n                                placeholder=\"with a placeholder\"\r\n                                type=\"email\"\r\n                                />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xl={12}>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\">\r\n                            Email\r\n                            </Label>\r\n                                <Input\r\n                                id=\"exampleEmail\"\r\n                                name=\"email\"\r\n                                placeholder=\"with a placeholder\"\r\n                                type=\"email\"\r\n                                />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xl={12}>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\">\r\n                            Number\r\n                            </Label>\r\n                                <Input\r\n                                id=\"exampleEmail\"\r\n                                name=\"email\"\r\n                                placeholder=\"with a placeholder\"\r\n                                type=\"email\"\r\n                                />\r\n                        </FormGroup>\r\n                    </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    \r\n                   \r\n                    <Col xl={12}>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\">\r\n                            Address\r\n                            </Label>\r\n                                <Input\r\n                                id=\"exampleEmail\"\r\n                                name=\"email\"\r\n                                placeholder=\"with a placeholder\"\r\n                                type=\"email\"\r\n                                />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    \r\n                    \r\n                    <Col xl={4}>\r\n                        <SwitchToogle/>\r\n                    </Col>\r\n                    <Col xl={4}>\r\n                        <SwitchToogle/>\r\n                    </Col>\r\n                    <Col xl={4}>\r\n                        <SwitchToogle/>\r\n                    </Col> \r\n                    <Col xl={12}>\r\n                        <Button className=\"w-100 btn--primary\">\r\n                            {t(\"save chages\")}\r\n                        </Button>\r\n                    </Col> */}\r\n                    \r\n                </Row>\r\n            </Form>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default FormElement","import {useState , useEffect} from \"react\"\r\nimport {useDispatch , useSelector } from \"react-redux\"\r\nimport {Navigate} from \"react-router-dom\"\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport Sidebar from  \"../../components/sidebar/sidebar\"\r\nimport Navbar from \"../../components/navbar/navbar\"\r\nimport Form from \"../../components/form/formCreate\"\r\nimport {Breadcrumb, Container , Row,Col , BreadcrumbItem} from \"reactstrap\"\r\nimport \"./document.scss\"\r\n\r\nimport {getForm , setDataExtracted  , setFilteredData} from \"../../store/formReducer\"\r\nimport dataHandler from \"../../utils/document\"\r\n\r\nimport { getFormFields } from \"../../store/formFieldReducer\"\r\n\r\nimport {createForm} from  \"../../store/formReducer\"\r\n\r\n\r\n\r\n\r\n\r\nconst Document = ()=>{\r\n    const dispatch = useDispatch()\r\n    const form_fields = useSelector(state=>state.form_field.form_fields)\r\n    const loading  =useSelector(state=>state.form.details.loading)\r\n    const created  =useSelector(state=>state.form.details.created)\r\n    \r\n    const opened = useSelector(state=>state.nav.opened)\r\n\r\n    useEffect( ()=>{\r\n        dispatch(getFormFields({}))\r\n    }, [])\r\n\r\n    \r\n    \r\n\r\n    const handleAddForm = (data)=>{\r\n        let {farm_name , region , wilaya , commune , daira ,   date , ...form }  = data\r\n        let wilaya_id = wilaya ? wilaya.wilaya_id ? wilaya.wilaya_id : null :null\r\n        let region_id = region ? region.region_id ? region.region_id : null :null\r\n        let commune_id = commune ? commune.commune_id ? commune.commune_id : null :null\r\n        let daira_id = daira ? daira.daira_id ? daira.daira_id : null :null\r\n        dispatch(createForm({\r\n            farm_name , \r\n            commune_id,\r\n            wilaya_id,\r\n            region_id,\r\n            daira_id,\r\n            date ,\r\n            form\r\n        }))\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    return(\r\n        <div className=\"flex document\">\r\n            {\r\n                created && <Navigate to={`/document/filter`} />\r\n            }\r\n            <Sidebar />\r\n            <div className={`documentContainer ${opened ? \"nav-opened\" : \"nav-closed\"}`}>\r\n                <Navbar />\r\n\r\n                <Container className=\"py-4\">\r\n                    <div className=\"document_details shadow\">\r\n                            <Row className=\"top p-3 justify-content-between\">\r\n                                <Col className=\"d-flex flex-wrap align-items-baseline\">\r\n                                    <h1 className=\"title_enquete mr-3\">enquete épidémiologique</h1>                           \r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <PerfectScrollbar style={{maxHeight : \"500px\"}}>\r\n                                <Row className=\"details \">\r\n                                       <Form\r\n                                            structure = {dataHandler.extractForm(form_fields)}\r\n                                            submit={handleAddForm}\r\n                                            data={{}}\r\n                                            loading={loading}\r\n                                       />\r\n                                </Row>\r\n                            \r\n                            </PerfectScrollbar>\r\n                            \r\n                            \r\n                        \r\n                    </div>\r\n                    \r\n                </Container>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Document","const extractData = (form)=>{\r\n\r\n\r\n    let objFields = {}\r\n    let priorities = []\r\n    let extractedData= []\r\n\r\n    if(form){\r\n        extractedData = [\r\n            {type : \"title\"  ,  label : \"région\" },\r\n           \r\n            {type : \"property\",\r\n            value : form.wilaya ? form.wilaya.wilaya_name ?\r\n            form.wilaya.wilaya_name :\"N/A\":\"N/A\" , name : \"wilaya\"},\r\n            {type : \"property\",\r\n            value : form.daira ? form.daira.daira_name ?\r\n            form.daira.daira_name :\"N/A\":\"N/A\" , name : \"daira\"},\r\n            {type : \"property\",\r\n            value : form.commune ? form.commune.commune_name ?\r\n            form.commune.commune_name :\"N/A\":\"N/A\" , name : \"commune\"},\r\n        ]\r\n\r\n\r\n\r\n        let address_fields = form && form.address_fields\r\n        let string_fields = form && form.string_fields\r\n        let boolean_fields = form && form.boolean_fields\r\n        let number_fields = form && form.number_fields\r\n        let text_fields =  form && form.text_fields\r\n        let date_fields =  form && form.date_fields\r\n\r\n\r\n        console.log(\"address field are \", address_fields)\r\n\r\n        address_fields && address_fields.map(field=>{\r\n            let address = field.address;\r\n            let form_field = field.form_field\r\n            let form_field_name = form_field.form_field_name\r\n            let lat = field.lat;\r\n            let lng = field.lng;\r\n            /*-------*/\r\n            let field_group = form_field.field_group\r\n            let field_group_slug = field_group.field_group_slug\r\n            let field_group_name = field_group.field_group_name\r\n            let priority  = new Date(field_group.createdAt).getTime()\r\n\r\n            if(!objFields[priority]){\r\n                objFields[priority] = {};\r\n                objFields[priority].group = {type : \"title\"  , slug : field_group_slug  ,label : field_group_name }\r\n                objFields[priority].fields = [];\r\n                priorities.push(priority)\r\n            }\r\n\r\n            if(lat && lng){\r\n                \r\n                objFields[priority].fields.push({\r\n                    type : \"gps\",\r\n                    name: form_field_name,\r\n                    value : `${lat},${lng}`,\r\n                })\r\n\r\n            }else{\r\n                 \r\n                objFields[priority].fields.push({\r\n                    type : \"property\",\r\n                    name : form_field_name,\r\n                    value : address ? address :\"N/A\" , \r\n                    name : form_field_name ,\r\n                })\r\n\r\n            }\r\n        })\r\n\r\n        string_fields && string_fields.map(field=>{\r\n            let value = field.field_value\r\n            value = typeof(value) == \"string\" ? value.split(\"_*_\").join(\" \") : \"\"\r\n            \r\n            value = field.field_value ?field.field_value : \"N/A\"\r\n\r\n            let form_field = field.form_field\r\n            let form_field_name = form_field.form_field_name\r\n            /*-------*/\r\n            let field_group = form_field.field_group\r\n            let field_group_slug = field_group.field_group_slug\r\n            let field_group_name = field_group.field_group_name\r\n            let priority  = new Date(field_group.createdAt).getTime()\r\n\r\n            if(!objFields[priority]){\r\n                objFields[priority] = {};\r\n                objFields[priority].group = {type : \"title\"  , slug : field_group_slug  ,label : field_group_name }\r\n                objFields[priority].fields = [];\r\n                priorities.push(priority)\r\n            }\r\n\r\n            objFields[priority].fields.push({\r\n                type : \"property\",\r\n                value : value , name : form_field_name ,\r\n            })\r\n        })\r\n\r\n\r\n        text_fields && text_fields.map(field=>{\r\n            \r\n            let value = field.field_value ?field.field_value : \"N/A\"\r\n\r\n            let form_field = field.form_field\r\n            let form_field_name = form_field.form_field_name\r\n            /*-------*/\r\n            let field_group = form_field.field_group\r\n            let field_group_slug = field_group.field_group_slug\r\n            let field_group_name = field_group.field_group_name\r\n            let priority  = new Date(field_group.createdAt).getTime()\r\n\r\n            if(!objFields[priority]){\r\n                objFields[priority] = {};\r\n                objFields[priority].group = {type : \"title\"  , slug : field_group_slug  ,label : field_group_name }\r\n                objFields[priority].fields = [];\r\n                priorities.push(priority)\r\n            }\r\n\r\n            objFields[priority].fields.push({\r\n                type : \"text\",\r\n                value : value , name : form_field_name ,\r\n            })\r\n        })\r\n\r\n        number_fields && number_fields.map(field=>{\r\n            let value = field.field_value \r\n\r\n            let form_field = field.form_field\r\n            let form_field_name = form_field.form_field_name\r\n            /*-------*/\r\n            let field_group = form_field.field_group\r\n            let field_group_slug = field_group.field_group_slug\r\n            let field_group_name = field_group.field_group_name\r\n            let priority  = new Date(field_group.createdAt).getTime()\r\n\r\n            if(!objFields[priority]){\r\n                objFields[priority] = {};\r\n                objFields[priority].group = {type : \"title\"  , slug : field_group_slug  ,label : field_group_name }\r\n                objFields[priority].fields = [];\r\n                priorities.push(priority)\r\n            }\r\n\r\n            objFields[priority].fields.push({\r\n                type : \"property\",\r\n                value : value , \r\n                name : form_field_name ,\r\n            })\r\n        })\r\n\r\n        boolean_fields && boolean_fields.map(field=>{\r\n            let value = field.field_value\r\n\r\n            let form_field = field.form_field\r\n            let form_field_name = form_field.form_field_name\r\n\r\n\r\n            /*-------*/\r\n            let field_group = form_field.field_group\r\n            let field_group_slug = field_group.field_group_slug\r\n            let field_group_name = field_group.field_group_name\r\n            let priority  = new Date(field_group.createdAt).getTime()\r\n\r\n            if(!objFields[priority]){\r\n                objFields[priority] = {};\r\n                objFields[priority].group = {type : \"title\"  , slug : field_group_slug  ,label : field_group_name }\r\n                objFields[priority].fields = [];\r\n                priorities.push(priority)\r\n            }\r\n\r\n\r\n            objFields[priority].fields.push({\r\n                type : \"property\",\r\n                value : value ? 'oui' : 'non' , \r\n                name : form_field_name ,\r\n            })\r\n        })\r\n\r\n        date_fields && date_fields.map(field=>{\r\n            let value = field.field_value ?field.field_value : \"N/A\"\r\n\r\n            let form_field = field.form_field\r\n            let form_field_name = form_field.form_field_name\r\n            /*-------*/\r\n            let field_group = form_field.field_group\r\n            let field_group_slug = field_group.field_group_slug\r\n            let field_group_name = field_group.field_group_name\r\n            let priority  = new Date(field_group.createdAt).getTime()\r\n\r\n            if(!objFields[priority]){\r\n                objFields[priority] = {};\r\n                objFields[priority].group = {type : \"title\"  , slug : field_group_slug  ,label : field_group_name }\r\n                objFields[priority].fields = [];\r\n                priorities.push(priority)\r\n            }\r\n\r\n            objFields[priority].fields.push({\r\n                type : \"date\",\r\n                value : value , \r\n                name : form_field_name ,\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    priorities.sort()\r\n\r\n\r\n    priorities.forEach(priority=>{\r\n        let group =  objFields[priority]\r\n        extractedData.push(group.group)\r\n        extractedData = [...extractedData , ...group.fields]\r\n\r\n    })\r\n\r\n\r\n\r\n    \r\n    return extractedData\r\n\r\n\r\n    \r\n    \r\n\r\n}\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\nconst extractForm = (form_fields)=>{\r\n    \r\n    let objFields = {}\r\n    let priorities = []\r\n    form_fields && form_fields.map(form_field=>{\r\n        let field_group = form_field.field_group\r\n        let field_group_slug = field_group.field_group_slug\r\n        let field_group_name = field_group.field_group_name\r\n        let priority  = new Date(field_group.createdAt).getTime()\r\n        if(!objFields[priority]){\r\n            objFields[priority] = {};\r\n            objFields[priority].group = {type : \"title\"  , slug : field_group_slug  ,label : field_group_name }\r\n            objFields[priority].fields = [];\r\n            priorities.push(priority)\r\n        }\r\n\r\n        \r\n        let form_field_id = form_field.form_field_id\r\n        let form_field_name = form_field.form_field_name\r\n        let form_field_type = form_field.form_field_type\r\n        let field_options =  form_field.field_options\r\n        /*-------*/\r\n\r\n        let type = \"\"\r\n        let typeInput = \"\"\r\n        let xl = 6\r\n\r\n       if(form_field_type ==\"STRING\"){\r\n            type = \"input\"\r\n            typeInput = \"text\"\r\n        }else if(form_field_type ==\"TEXT\"  ){\r\n            type = \"textarea\";\r\n            xl = 12;\r\n        }else if(form_field_type ==\"NUMBER\"  ){\r\n            type = \"input\"\r\n            typeInput = \"number\"\r\n        }else if(form_field_type ==\"DATE\"  ){\r\n            type = \"input\"\r\n            typeInput = \"date\"\r\n        }\r\n        if(form_field_type ==\"SELECT\"){\r\n            objFields[priority].fields.push( {\r\n                type : \"select\", \r\n                label : form_field_name ,\r\n                field : form_field_id.toString(),\r\n                name: `${form_field_name}__${form_field_id}`,\r\n                options : {\r\n                    label :\"field_option_value\" ,\r\n                    value : \"field_option_id\", \r\n                    options : field_options ? field_options :[] \r\n                },      \r\n                // icon : \"las la-lock input-icon\",\r\n                placeholder : \"\",\r\n                xl :6,\r\n                id :  `${form_field_name}__${form_field_id}`\r\n            })\r\n\r\n        }else if(form_field_type ==\"COMPLEXSELECT\"){\r\n\r\n            objFields[priority].fields.push( {\r\n                type : \"select_complex\", \r\n                label : form_field_name ,\r\n                field : form_field_id.toString(),\r\n                name: `${form_field_name}__${form_field_id}`,\r\n                options : {\r\n                    label :\"field_option_value\" ,\r\n                    value : \"field_option_id\", \r\n                    options : field_options ? field_options :[] \r\n                },      \r\n                // icon : \"las la-lock input-icon\",\r\n                placeholder : \"\",\r\n                xl :8,\r\n                id :  `${form_field_name}__${form_field_id}`\r\n            })\r\n\r\n        }else if(form_field_type ==\"ADDRESS\"){\r\n\r\n            objFields[priority].fields.push( {\r\n                type : \"address\", \r\n                label : form_field_name ,\r\n                field : form_field_id.toString(),\r\n                name: `${form_field_name}__${form_field_id}`,   \r\n                // icon : \"las la-lock input-icon\",\r\n                placeholder : \"\",\r\n                xl :8,\r\n                id :  `${form_field_name}__${form_field_id}`\r\n            })\r\n\r\n        }else if(form_field_type ==\"GPS\"){\r\n\r\n            objFields[priority].fields.push( {\r\n                type : \"gps\", \r\n                label : form_field_name ,\r\n                field : form_field_id.toString(),\r\n                name: `${form_field_name}__${form_field_id}`,   \r\n                // icon : \"las la-lock input-icon\",\r\n                placeholder : \"\",\r\n                xl :8,\r\n                id :  `${form_field_name}__${form_field_id}`\r\n            })\r\n\r\n        }else if(form_field_type ==\"BOOLEAN\"){\r\n\r\n                objFields[priority].fields.push( {\r\n                    type : \"switch\", \r\n                    label : form_field_name ,\r\n                    field : form_field_id.toString(),\r\n                    checkedOn : true,\r\n                    on : form_field_name,\r\n                    off : `non ${form_field_name}`,\r\n                    name: `${form_field_name}__${form_field_id}`,   \r\n                    // icon : \"las la-lock input-icon\",\r\n                    placeholder : \"\",\r\n                    xl :4,\r\n                    id :  `${form_field_name}__${form_field_id}`\r\n                })\r\n    \r\n        }else{\r\n\r\n            objFields[priority].fields.push({\r\n                type : type, \r\n                label : form_field_name,\r\n                name: `${form_field_name}__${form_field_id}`,\r\n                typeInput : typeInput,\r\n                field : form_field_id.toString(),\r\n                placeholder : \"\",\r\n                xl :xl,\r\n                id :  `${form_field_name}__${form_field_id}`,\r\n            })\r\n        }\r\n        \r\n    })\r\n\r\n\r\n   \r\n\r\n    let extractedData= [\r\n        {\r\n            type : 'input', \r\n            label : \"nom de la ferme\",\r\n            name: `farme_name`,\r\n            typeInput : \"text\",\r\n            field : \"farm_name\",\r\n            xl :6,\r\n            id : \"farme_name\",\r\n        },\r\n        {\r\n            type : 'input', \r\n            label : \"date de l'enquete\",\r\n            name: `date de l'enquète`,\r\n            typeInput : \"date\",\r\n            field : \"date\",\r\n            xl :6,\r\n            id : \"form_date\",\r\n        } , \r\n        {   \r\n            type : \"title\"  , \r\n            slug : \"région\"  ,\r\n            label : \"région\" \r\n        },\r\n        {\r\n            type : \"select\", \r\n            label : \"region\",\r\n            typeSelect : \"store\",\r\n            field : \"region\",\r\n            name: \"region\",\r\n            options : {\r\n                key : \"regions\",\r\n                where : \"region\",\r\n                label :  \"region_name\",\r\n                value :  \"region_id\"\r\n            } ,        \r\n            placeholder : \"saidir votre région\",\r\n            xl :4,\r\n            id :  \"region\"\r\n        },\r\n         {\r\n            type : \"select\", \r\n            label : \"wilaya\",\r\n            typeSelect : \"store\",\r\n            field : \"wilaya\",\r\n            name: \"wilaya\",\r\n            options : {\r\n                key : \"wilayas\",\r\n                where : \"wilaya\",\r\n                label :  \"wilaya_name\",\r\n                value :  \"wilaya_id\"\r\n            } ,        \r\n            placeholder : \"saisir votre wilaya\",\r\n            xl :4,\r\n            id :  \"wilaya\"\r\n        },\r\n        {\r\n            type : \"select\", \r\n            label : \"daira\",\r\n            typeSelect : \"store\",\r\n            field : \"daira\",\r\n            name: \"daira\",\r\n            options : {\r\n                key : \"dairas\",\r\n                where : \"daira\",\r\n                label :  \"daira_name\",\r\n                value :  \"daira_id\"\r\n            } ,        \r\n            placeholder : \"enter your daira\",\r\n            xl :4,\r\n            id :  \"daira\"\r\n        },\r\n        {\r\n            type : \"select\", \r\n            label : \"commune\",\r\n            typeSelect : \"store\",\r\n            field : \"commune\",\r\n            name: \"commune\",\r\n            options : {\r\n                key : \"communes\",\r\n                where : \"commune\",\r\n                label :  \"commune_name\",\r\n                value :  \"commune_id\"\r\n            } ,        \r\n            placeholder : \"enter your commune\",\r\n            xl :4,\r\n            id :  \"commune\"\r\n        }\r\n\r\n\r\n    ]\r\n\r\n\r\n    priorities.sort()\r\n\r\n\r\n    priorities.forEach(priority=>{\r\n        let group =  objFields[priority]\r\n        extractedData.push(group.group)\r\n        extractedData = [...extractedData , ...group.fields]\r\n\r\n    })\r\n\r\n\r\n    extractedData.push(\r\n        {\r\n            xl : 12,\r\n            className:\"px-3 my-4\",\r\n            fields : [\r\n                {\r\n                    type : \"button\",\r\n                    className : \"w-100 btn--primary\",\r\n                    text : \"save changes\"\r\n                }\r\n            ]\r\n        })\r\n        console.log(\"our all extrated \", extractedData)\r\n    return {\r\n         type : \"row\",\r\n        className : \"w-100 \",\r\n        fields :  extractedData ? extractedData :[]\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst dataForm = (form) =>{\r\n    let objData = {}\r\n\r\n   \r\n\r\n    if(form){\r\n        objData[\"date\"]= new Date(form.date).getTime()\r\n        objData[\"farm_name\"]= form.farm_name\r\n        objData[\"region\"] =  form.region\r\n        objData[\"wilaya\"] =  form.wilaya\r\n        objData[\"commune\"] =  form.commune\r\n        objData[\"daira\"] =  form.daira\r\n\r\n\r\n        let string_fields = form && form.string_fields\r\n\r\n        string_fields && string_fields.map(field=>{\r\n            let value = field.field_value\r\n            let form_field_id  = field.form_field_id\r\n\r\n            let form_type = field.form_field.form_field_type\r\n            if(form_type ==\"COMPLEXSELECT\"){\r\n                let field_options = field.form_field.field_options\r\n                let [field_value , extra] = value.split('_*_');\r\n\r\n                let filtered = field_options  && field_options.filter(option=>{\r\n                    return (option.field_option_value == field_value)\r\n                })\r\n\r\n                let obgVal = filtered[0] ? { ...filtered[0] , extra} : {extra}\r\n                objData[form_field_id.toString()] = obgVal\r\n                \r\n            }\r\n            if(form_type ==\"SELECT\"){\r\n                let field_options = field.form_field.field_options\r\n\r\n                let filtered = field_options  && field_options.filter(option=>{\r\n                    return (option.field_option_value == value)\r\n                })\r\n\r\n                let obgVal = filtered[0] ? filtered[0]   :{}\r\n                objData[form_field_id.toString()] = obgVal\r\n                \r\n            }\r\n\r\n            if(form_type ==\"STRING\"){\r\n                let value = field.field_value\r\n                objData[form_field_id.toString()] = value\r\n                \r\n            }\r\n\r\n           \r\n\r\n        })\r\n\r\n\r\n\r\n        \r\n\r\n\r\n\r\n        let fields =[] \r\n\r\n        fields = form  && form.text_fields \r\n\r\n        fields && fields.map(field=>{\r\n            let value = field.field_value\r\n            let form_field_id  = field.form_field_id\r\n            objData[form_field_id.toString()] = value\r\n        })\r\n        fields = form  && form.boolean_fields \r\n\r\n        fields && fields.map(field=>{\r\n            let value = field.field_value\r\n            let form_field_id  = field.form_field_id\r\n            objData[form_field_id.toString()] = value\r\n        })\r\n        fields = form  && form.number_fields \r\n\r\n\r\n        fields && fields.map(field=>{\r\n            let value = field.field_value\r\n            let form_field_id  = field.form_field_id\r\n            objData[form_field_id.toString()] = value\r\n        })\r\n\r\n        let address_fields = form && (form.address_fields )\r\n\r\n\r\n        address_fields && address_fields.map(field=>{\r\n            let form_field_id  = field.form_field_id\r\n            objData[form_field_id.toString()] = {\r\n                address : field.address,\r\n                lat : field.lat,\r\n                lng : field.lng\r\n            }\r\n        })\r\n\r\n\r\n        // address_fields && address_fields.map(field=>{\r\n        //     let address = field.address;\r\n        //     let form_field = field.form_field\r\n        //     let form_field_name = form_field.form_field_name\r\n        //     /*-------*/\r\n        //     let field_group = form_field.field_group\r\n        //     let field_group_slug = field_group.field_group_slug\r\n        //     let field_group_name = field_group.field_group_name\r\n        //     let priority  = new Date(field_group.createdAt).getTime()\r\n\r\n        //     if(!objFields[priority]){\r\n        //         objFields[priority] = {};\r\n        //         objFields[priority].group = {type : \"title\"  , slug : field_group_slug  ,label : field_group_name }\r\n        //         objFields[priority].fields = [];\r\n        //         priorities.push(priority)\r\n        //     }\r\n\r\n        //     objFields[priority].fields.push({\r\n        //         type : \"property\",\r\n        //         value : address , name : form_field_name ,\r\n        //     })\r\n        // })\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    return objData\r\n}\r\n\r\n\r\nconst document = {extractData , extractForm , dataForm}\r\n\r\n\r\nexport default document"],"names":["extractComponents","data","fields","handleChange","isRacine","loading","form_field_type","value","type","label","creatable","field","name","isMulti","placeholder","xl","id","map","md","className","src","exportData","typeInput","changed","text","checkedOn","on","off","typeSelect","field_deleted","options","typeMap","lat","field_lat","lng","field_lng","radius","field_radius","structure","submit","restricted","t","useTranslation","useLocation","useState","dataQuery","setDataQuery","useEffect","console","log","title","onSubmit","e","preventDefault","gap","key","reformate","dispatch","useDispatch","form_fields","useSelector","state","form_field","form","details","created","opened","nav","getFormFields","to","style","maxHeight","dataHandler","farm_name","region","wilaya","commune","daira","date","wilaya_id","region_id","commune_id","daira_id","createForm","document","extractData","objFields","priorities","extractedData","wilaya_name","daira_name","commune_name","address_fields","string_fields","boolean_fields","number_fields","text_fields","date_fields","address","form_field_name","field_group","field_group_slug","field_group_name","priority","Date","createdAt","getTime","group","slug","push","field_value","split","join","sort","forEach","extractForm","form_field_id","field_options","toString","where","dataForm","objData","form_type","extra","filtered","filter","option","field_option_value","obgVal"],"sourceRoot":""}